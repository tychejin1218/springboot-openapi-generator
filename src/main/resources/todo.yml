openapi: 3.0.0
servers:
  - url: 'http://localhost:9091/api'
info:
  description: >-
    OpenAPI Generator를 이용하여 TO-DO API 관련한 코드를 생성
  version: 1.0.0
  title: Todo 관련한 API
tags:
  - name: Todo
    description: Todo 관련한 API
paths:
  /todo:
    post:
      tags:
        - todo
      summary: 새로운 Todo 항목을 생성하는 API
      description: ''
      operationId: addTodo
      responses:
        '200':
          $ref: '#/components/responses/Base'
        '400':
          $ref: '#/components/responses/Error'
      requestBody:
        $ref: '#/components/requestBodies/Todo'
    put:
      tags:
        - todo
      summary: Todo 항목을 수정
      description: ''
      operationId: updateTodo
      responses:
        '200':
          $ref: '#/components/responses/Base'
        '400':
          $ref: '#/components/responses/Error'
      requestBody:
        $ref: '#/components/requestBodies/Todo'
  '/todo/{id}':
    get:
      tags:
        - todo
      summary: 주어진 id로 Todo 항목을 조회
      description: TO-DO를 반환
      operationId: getTodoById
      parameters:
        - name: id
          in: path
          description: ID를 기준으로 TO-DO를 반환
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          $ref: '#/components/responses/Base'
        '400':
          $ref: '#/components/responses/Error'
    delete:
      tags:
        - todo
      summary: 주어진 id로 항목을 삭제
      description: ''
      operationId: deleteTodo
      parameters:
        - name: id
          in: path
          description: ID를 기준으로 TO-DO를 삭제
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          $ref: '#/components/responses/Base'
        '400':
          $ref: '#/components/responses/Error'
components:
  requestBodies:
    Todo:
      description: Todo 요청을 위한 본문
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TodoRequest'
  responses:
    Base:
      description: 성공
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponse'
    Error:
      description: 실패
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    BaseResponse:
      type: object
      properties:
        statusCode:
          type: string
          example: "200"
        message:
          type: string
          example: "성공"
        data:
          type: object
          $ref: '#/components/schemas/TodoResponse'
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: string
          example: "400"
        message:
          type: string
          example: "성공"
        method:
          type: string
          example: "GET"
        path:
          type: string
          example: "path"
        timestamp:
          type: string
          example: "timestamp"
    TodoRequest:
      title: Todo.Request
      description: Todo 요청을 위한 객체
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          example: Title Test
          description: Todo 제목
        description:
          type: string
          example: Title Description
          description: Todo 상세 설명
    TodoResponse:
      title: Todo.Response
      description: Todo 응답을 위한 객체
      type: object
      required:
        - title
        - description
      properties:
        id:
          type: integer
          format: int64
          description: Todo 고유 ID
        title:
          type: string
          example: Title Test
          description: Todo 제목
        description:
          type: string
          example: Description Test
          description: Todo 상세 설명
        completed:
          type: boolean
          example: false
          description: Todo 완료 여부

